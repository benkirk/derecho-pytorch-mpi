{% set version = "1.0.0" %}
{% set build = 1 %}

{% if cuda_compiler_version != "None" %}
{% set build = build + 200 %}
{% endif %}

{% if cuda_compiler_version in (None, "None", True, False) %}
{% set cuda_major = 0 %}
{% else %}
{% set cuda_major = environ.get("cuda_compiler_version", "11.8").split(".")[0] | int %}
{% endif %}

package:
  name: tinympi
  version: {{ version }}_derecho

source:
  - path: hello_world_mpi.C
  - path: hello_world_mpi_cuda.C

build:
  number: {{ build }}
  string: cuda{{ cuda_compiler_version | replace('.', '') }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }} # [cuda_compiler_version == "None"]
  detect_binary_files_with_prefix: false
  ignore_run_exports_from:
    - python *
    - numpy *
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
  ignore_run_exports:
    - python *
    - numpy *

requirements:
  # Keep this list synchronized (except for python*, numpy*) in outputs
  # We use python to build libtorch as well because it is easier
  build:
    # When you change 3.12 here, change it in build.sh as well
    - python
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - {{ stdlib('c') }}
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}    # [cuda_compiler_version != "None"]
    {% if cuda_major >= 12 %}
    - cuda-driver-dev                        # [build_platform != target_platform]
    - cuda-cudart-dev                        # [build_platform != target_platform]
    #- cuda-nvrtc-dev                         # [build_platform != target_platform]
    #- cuda-nvtx-dev                          # [build_platform != target_platform]
    #- cuda-nvml-dev                          # [build_platform != target_platform]
    #- cuda-profiler-api                      # [build_platform != target_platform]
    #- libcublas-dev                          # [build_platform != target_platform]
    #- libcufft-dev                           # [build_platform != target_platform]
    #- libcurand-dev                          # [build_platform != target_platform]
    #- libcusolver-dev                        # [build_platform != target_platform]
    #- libcusparse-dev                        # [build_platform != target_platform]
    {% endif %}
    - patch
    - git
    - libgomp
    - make
    - rsync
  host:
    # MPI requirements
    - mpich=3.4
    # GPU requirements
    #- cudnn                           # [cuda_compiler_version != "None"]
    #- nccl                            # [cuda_compiler_version != "None"]
    #- magma                           # [cuda_compiler_version != "None"]
    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != "None"]
    {% if cuda_major >= 12 %}
    - cuda-driver-dev
    - cuda-cudart-dev
    #- cuda-nvrtc-dev
    #- cuda-nvtx-dev
    #- cuda-nvml-dev
    #- cuda-profiler-api
    #- libcublas-dev
    #- libcufft-dev
    #- libcurand-dev
    #- libcusolver-dev
    #- libcusparse-dev
    {% endif %}
    # other requirements
    - python
    - libgomp
    - pkg-config

  # run:
  #   # GPU requirements without run_exports
  #   - {{ pin_compatible('cudnn') }}                       # [cuda_compiler_version != "None"]
  # run_constrained:
  #   # These constraints ensure conflict between pytorch and
  #   # pytorch-cpu 1.1 which we built before conda-forge had GPU infrastructure
  #   # built into place.
  #   # https://github.com/conda-forge/pytorch-cpu-feedstock/issues/65
  #   - pytorch-cpu =={{ version }}  # [cuda_compiler_version == "None"]
  #   - pytorch-gpu ==99999999       # [cuda_compiler_version == "None"]
  #   - pytorch-gpu =={{ version }}  # [cuda_compiler_version != "None"]
  #   - pytorch-cpu ==99999999       # [cuda_compiler_version != "None"]
  #   - pytorch {{ version }} cuda{{ cuda_compiler_version | replace('.', '') }}_*_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  #   - pytorch {{ version }} cpu_{{ blas_impl }}_*_{{ PKG_BUILDNUM }}                                 # [cuda_compiler_version == "None"]
