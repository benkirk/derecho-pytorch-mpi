package:
  name: mpi4py
  version: '{{ os.environ.get("MPI4PY_VERSION", "4.0.0") }}'

source:
#  - git_url: https://github.com/benkirk/derecho-pytorch-mpi.git
#    git_rev: 'conda-packaging'
   - path: ../../profile.d

build:
  string: 'derecho.gcc.12.2.0.cray.mpich.8.1.27'

  # we're really abusing conda-build here.  This package will only work
  # on Derecho with cray-mpich - therefore it will have many dependent
  # shared libraries outside the conda-build source tree.  That's OK,
  # if distasteful.  Allow it.
  missing_dso_whitelist:
    - '*/libpmi*.so.0'
    - '*/libpals.so.0'
    - '*/libcuda*.so.*'
    - '*/libmpi_*.so*'
    - '*/libpthread.so.0'
    - '/lib64/librt.so.1'
    - '/lib64/libc.so.6'

requirements:
  build:
    - cython
    - pip
    - python
    #- libstdcxx-ng #>=12.2

#  run:
#    - libstdcxx-ng #>=12.2
##   - python

test:
  imports:
    - mpi4py
    - mpi4py.MPI
    - mpi4py.futures

about:
  home: https://mpi4py.github.io/
  license: BSD-3-Clause
  license_family: BSD
  #license_file: LICENSE.rst
  summary: Python bindings for MPI
  description: |
    MPI for Python provides bindings of the Message Passing Interface (MPI)
    standard for the Python programming language, allowing any Python program
    to exploit multiple processors.

    This particular mpi4py package is designed to run on NSF NCAR's Derecho
    supercomputer using the host-provided cray-mpich MPI library.
  doc_url: https://mpi4py.readthedocs.org/
  dev_url: https://github.com/mpi4py/mpi4py
