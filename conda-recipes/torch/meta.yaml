{% set version_env = os.environ.get("PYTORCH_VERSION", "2.3.1") %}
{% set ncar_build_env = os.environ.get("NCAR_BUILD_ENV") %}

package:
  name: pytorch
  version: '{{ version_env }}'

source:
  - git_url: https://github.com/benkirk/derecho-pytorch-mpi.git
    git_rev: 'conda-packaging'

build:
  number: 1000 # high priortity over other matches at same version
  string: derecho.gcc.12.2.0.cray.mpich.8.1.27_py{{ PY_VER }}_{{ PKG_BUILDNUM }}
  script_env:
    - NCAR_BUILD_ENV
  track_features:
    - '{{ ncar_build_env }}'

  rpaths:
    - lib/
    - lib/torch.deps/

  # we're really abusing conda-build here.  This package will only work
  # on Derecho with cray-mpich - therefore it will have many dependent
  # shared libraries outside the conda-build source tree.  That's OK,
  # if distasteful.  Allow it.
  missing_dso_whitelist:
    - '*/libcublas.so.*'
    - '*/libcublasLt.so.*'
    - '*/libcuda*.so.*'
    - '*/libcudnn.so.*'
    - '*/libcufft.so.*'
    - '*/libcupti.so.*'
    - '*/libcurand.so.*'
    - '*/libcusolver.so.*'
    - '*/libcusparse.so.*'
    - '*/libfabric.so.*'
    - '*/libmpi_*.so*'
    - '*/libnccl.so.*'
    - '*/libnvToolsExt.so.*'
    - '*/libnvrtc.so.*'
    - '*/libpals.so.*'
    - '*/libpmi*.so.*'
    - '*/libpthread.so.0'
    - '/lib64/ld-linux-x86-64.so.2'
    - '/lib64/libc.so.6'
    - '/lib64/libdl.so.2'
    - '/lib64/libgcc_s.so.1'
    - '/lib64/libm.so.6'
    - '/lib64/librt.so.1'
    - '/usr/lib64/libgomp.so.1'
    - '/usr/lib64/libnuma.so.1'
    - '/usr/lib64/libstdc++.so.6'

requirements:
  # the 'short list' is to install from a wheel, the longer list
  # is if we wanted to repeat the compilation inside the conda-build env
  build:
    - python
    - pip
    - wheel

  run:
    - python
    #- ffmpeg >=4.2.2,<5
    #- llvm-openmp
    - cusparselt==0.6.2.3
    #- libstdcxx-ng #>=12.2
    #- libgcc-ng #>=12.2
    #- _openmp_mutex #>=4.5
    - filelock
    - fsspec
    - jinja2
    - networkx
    - sympy
    - typing-extensions >=4.8.0

# from torch:
# Requirement already satisfied: filelock (from torch==2.3.1+derecho) (3.15.4)
# Requirement already satisfied: typing-extensions>=4.8.0 (from torch==2.3.1+derecho) (4.12.2)
# Requirement already satisfied: sympy (from torch==2.3.1+derecho) (1.13.2)
# Requirement already satisfied: networkx (from torch==2.3.1+derecho) (3.3)
# Requirement already satisfied: jinja2 (from torch==2.3.1+derecho) (3.1.4)
# Requirement already satisfied: fsspec (from torch==2.3.1+derecho) (2024.6.1)

test:
  imports:
    - torch
    - torch.distributed
  commands:
    - find $CONDA_PREFIX -name libtorch.so | xargs ldd

about:
  home: https://pytorch.org/
  dev_url: https://github.com/pytorch/pytorch
  license: BSD-3-Clause
  license_family: BSD
  license_file:
    - '../../pytorch-v{{ version_env }}/LICENSE'
    - '../../pytorch-v{{ version_env }}/NOTICE'
    - '../../pytorch-v{{ version_env }}/third_party/pybind11/LICENSE'
  summary: PyTorch is an optimized tensor library for deep learning using GPUs and CPUs (built to run on Derecho using the host-provided cray-mpich MPI library).
