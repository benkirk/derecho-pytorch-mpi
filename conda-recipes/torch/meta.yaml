{% set version_env = os.environ.get("PYTORCH_VERSION", "2.3.1") %}

package:
  name: pytorch
  version: '{{ version_env }}' #'{{ os.environ.get("PYTORCH_VERSION", "2.3.1") }}'

source:
  - git_url: https://github.com/benkirk/derecho-pytorch-mpi.git
    git_rev: 'conda-packaging'

  # #git_url: https://github.com/pytorch/pytorch
  # #git_rev: v{{ version }}
  # url: https://github.com/pytorch/pytorch/releases/download/v{{ version }}/pytorch-v{{ version }}.tar.gz
  # sha256: 6c66b59345091907cd62a693b647cee224558e7f15a9b04f4f322f4f6ffeb75b
  # folder: pytorch-v{{ version }}


build:
  number: 1000 # high priortity over other matches at same version
  string: 'derecho.gcc.12.2.0.cray.mpich.8.1.27'
  script_env:
    - NCAR_BUILD_ENV

  # we're really abusing conda-build here.  This package will only work
  # on Derecho with cray-mpich - therefore it will have many dependent
  # shared libraries outside the conda-build source tree.  That's OK,
  # if distasteful.  Allow it.
  missing_dso_whitelist:
    - '*/libcublas.so.*'
    - '*/libcublasLt.so.*'
    - '*/libcuda*.so.*'
    - '*/libcudnn.so.*'
    - '*/libcufft.so.*'
    - '*/libcupti.so.*'
    - '*/libcurand.so.*'
    - '*/libcusolver.so.*'
    - '*/libcusparse.so.*'
    - '*/libfabric.so.*'
    - '*/libmpi_*.so*'
    - '*/libnccl.so.*'
    - '*/libnvToolsExt.so.*'
    - '*/libnvrtc.so.*'
    - '*/libpals.so.*'
    - '*/libpmi*.so.*'
    - '*/libpthread.so.0'
    - '/lib64/ld-linux-x86-64.so.2'
    - '/lib64/libc.so.6'
    - '/lib64/libdl.so.2'
    - '/lib64/libgcc_s.so.1'
    - '/lib64/libm.so.6'
    - '/lib64/librt.so.1'
    - '/usr/lib64/libnuma.so.1'


requirements:
  # the 'short list' is to install from a wheel, the longer list
  # is if we wanted to repeat the compilation inside the conda-build env
  build:
    - python
    #- cusparselt==0.6.2.3
    #- ffmpeg >=4.2.2,<5
    #- libgcc-ng #>=12.2
    #- libstdcxx-ng #>=12.2
    #- llvm-openmp
    - pip
    - wheel
    # - astunparse
    # - cmake
    # - cusparselt==0.6.2.3
    # - expecttest !=0.2.0
    # - ffmpeg >=4.2.2,<5
    # - llvm-openmp
    # - filelock
    # - flake8
    # - fsspec
    # - hypothesis
    # - jinja2
    # - lark
    # #- libjpeg-turbo
    # #- libpng
    # - lintrunner
    # - make
    # - mkl-include
    # - mkl-static
    # - mypy
    # - networkx
    # - ninja
    # #- numpy <2
    # - optree >=0.11.0
    # - packaging
    # - pip
    # - psutil
    # - pytest
    # - pytest-mock
    # - python
    # - pytorch::magma-cuda121
    # - pyyaml
    # - requests
    # - scipy
    # - setuptools
    # - sympy
    # - types-dataclasses
    # - typing
    # - typing-extensions >=4.8.0
    # - wheel

# ref. pytorch-2.4.0/setup.py:
# # the list of runtime dependencies required by this built package
# install_requires = [
#     "filelock",
#     "typing-extensions>=4.8.0",
#     "sympy",
#     "networkx",
#     "jinja2",
#     "fsspec",
# ]

  run:
    - python
    #- ffmpeg >=4.2.2,<5
    #- llvm-openmp
    - cusparselt==0.6.2.3
    #- libstdcxx-ng #>=12.2
    #- libgcc-ng #>=12.2
    #- _openmp_mutex #>=4.5
    - filelock
    - fsspec
    - jinja2
    - networkx
    - sympy
    - typing-extensions >=4.8.0

# from torch:
# Requirement already satisfied: filelock (from torch==2.3.1+derecho) (3.15.4)
# Requirement already satisfied: typing-extensions>=4.8.0 (from torch==2.3.1+derecho) (4.12.2)
# Requirement already satisfied: sympy (from torch==2.3.1+derecho) (1.13.2)
# Requirement already satisfied: networkx (from torch==2.3.1+derecho) (3.3)
# Requirement already satisfied: jinja2 (from torch==2.3.1+derecho) (3.1.4)
# Requirement already satisfied: fsspec (from torch==2.3.1+derecho) (2024.6.1)
# Requirement already satisfied: MarkupSafe>=2.0 (from jinja2->torch==2.3.1+derecho) (2.1.5)
# Requirement already satisfied: mpmath<1.4,>=1.1.0 (from sympy->torch==2.3.1+derecho) (1.3.0)

# from torchvison:
# Requirement already satisfied: numpy (from torchvision==0.18.1+derecho) (1.26.4)
# Requirement already satisfied: torch==2.3.1+derecho (from torchvision==0.18.1+derecho) (2.3.1+derecho)
# Requirement already satisfied: pillow!=8.3.*,>=5.3.0 (from torchvision==0.18.1+derecho) (10.4.0)

test:
  imports:
    - torch

about:
  home: https://pytorch.org/
  dev_url: https://github.com/pytorch/pytorch
  license: BSD-3-Clause
  license_family: BSD
  license_file:
    - '../../pytorch-v{{ version_env }}/LICENSE'
    - '../../pytorch-v{{ version_env }}/NOTICE'
    - '../../pytorch-v{{ version_env }}/third_party/pybind11/LICENSE'
  summary: PyTorch is an optimized tensor library for deep learning using GPUs and CPUs (built to run on Derecho using the host-provided cray-mpich MPI library).
